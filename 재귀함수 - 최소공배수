#include <iostream>
using namespace std;
int n;  // 숫자의 개수
int arr[10];  // 숫자들을 저장할 배열 (최대 10개의 숫자)
int gcd(int a, int b) { // gcd는 두 수의 최대공약수를 구하는 함수
    if (b == 0) return a;  // b가 0이면 a가 최대공약수
    return gcd(b, a % b);  // b가 0이 아니면 재귀적으로 계속 나머지를 구함
}
int lcm(int a, int b) { // lcm은 두 수의 최소공배수를 구하는 함수
    return (a / gcd(a, b)) * b;  // a와 b의 최소공배수를 구하는 공식
}
int findLCM(int index) { // 배열에서 모든 수의 최소공배수를 구하는 함수
    if (index == n - 1) return arr[index];  // 배열 끝에 도달하면 현재 값을 반환
    return lcm(arr[index], findLCM(index + 1)); // 현재 값과 나머지 값들의 최소공배수를 재귀적으로 구함
}
int main() {
    cin >> n;  // 숫자 개수 입력받음
    for (int i = 0; i < n; i++) { // 0부터 n-1까지 반복하면서 배열에 숫자들을 입력받음
        cin >> arr[i]; // 배열의 각 자리에 숫자를 하나씩 입력받음
    }

    cout << findLCM(0) << endl;  // 배열의 모든 원소들의 최소공배수를 계산하여 출력

    return 0;
}
